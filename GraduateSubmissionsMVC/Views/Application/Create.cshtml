@model GraduateSubmissionsMVC.Models.ApplicationViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Add Application</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />

@if (ViewBag.DepartmentListCounter == 0 || ViewBag.TermListCounter == 0)
{
    @Html.Raw("No School Terms Exist.");
    @Html.Raw("<br /> No School Departments Exist.");
    @Html.Raw("<br /> See your Administrator for further assistance. <br />");
}
else
{
    using (Html.BeginForm("Create", "Application", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
   
    @Html.ValidationSummary(true)
    <div class="editor-box">
        <div class="editor-label">
            @Html.Raw("School Term")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Application.TermID, (List<SelectListItem>)ViewBag.TermList, string.Empty)
        </div>
            
        <div class="editor-label">
            @Html.LabelFor(model => model.Application.firstname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Application.firstname)
            @Html.ValidationMessageFor(model => model.Application.firstname)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Application.lastname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Application.lastname)
            @Html.ValidationMessageFor(model => model.Application.lastname)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Application.studentNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Application.studentNumber)
            @Html.ValidationMessageFor(model => model.Application.studentNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Application.number)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Application.number)
            @Html.ValidationMessageFor(model => model.Application.number)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Application.email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Application.email)
            @Html.ValidationMessageFor(model => model.Application.email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Application.PersonalInfo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Application.PersonalInfo)
            @Html.ValidationMessageFor(model => model.Application.PersonalInfo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Application.AppliedBefore)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Application.AppliedBefore)
            @Html.Raw(" Yes")
            @Html.ValidationMessageFor(model => model.Application.AppliedBefore)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Application.DateAppliedBefore)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Application.DateAppliedBefore)
            @Html.ValidationMessageFor(model => model.Application.DateAppliedBefore)
        </div>

        <!--Departments-->
         <div class="editor-label">
            @Html.Raw("Departments applying for...")
        </div>
        <div class="editor-field">
            @Html.CheckBoxList("Departments", (List<SelectListItem>)ViewBag.departmentList, Position.Horizontal)
        </div>

        <br />
        @Html.Raw("Add Files:")
        <br />
        <br />
        @FileUpload.GetHtml("fileUpload", 1, true, false)

        <p>
            <input type="submit" value="Save Application" />
        </p>
    </div>
    }
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
